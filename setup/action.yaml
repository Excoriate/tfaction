name: setup
description: setup
inputs:
  github_app_token:
    description: 'GitHub Access Token'
    required: true
  target:
    description: 'target'
    required: true

  github_token:
    description: 'GitHub Access Token'
    required: false
    default: ${{ github.token }}
  ssh_key:
    description: 'SSH Key for Terraform Private Module'
    required: false
  is_apply:
    description:
    required: false
    default: 'false'
  config:
    description: Configuration file path
    required: false
    default: 'tfaction.yaml'
outputs:
  working_directory:
    description: working directory
    value: ${{ steps.target-config.outputs.working_directory }}
  s3_bucket_name_plan_file:
    description: S3 Buckte name for plan files
    value: ${{ steps.target-config.outputs.s3_bucket_name_plan_file}}
  s3_bucket_name_tfmigrate_history:
    description: S3 Buckte name for tfmigrate history files
    value: ${{ steps.target-config.outputs.s3_bucket_name_tfmigrate_history}}
runs:
  using: composite
  steps:
    - uses: suzuki-shunsuke/tfaction/get-target-config@main
      id: target-config
      with:
        target: ${{ inputs.target }}
        config: ${{ inputs.config }}
        is_apply: ${{ inputs.is_apply }}

    - run: aqua i -l -a
      shell: bash
      working-directory: ${{ steps.target-config.outputs.working_directory }}

    - run: github-comment exec -- ci-info run | sed "s/^export //" >> "$GITHUB_ENV"
      shell: bash

    - uses: aws-actions/configure-aws-credentials@v1.6.0
      with:
        role-to-assume: ${{ steps.target-config.outputs.assume_role_arn }}
        role-session-name: samplerolesession
        aws-region: ${{ steps.target-config.outputs.aws_region }}

    - name: Run tfenv install if .terraform-version exists
      run: |
        [ ! -f .terraform-version ] || github-comment exec -- tfenv install
      shell: bash
      working-directory: ${{ steps.target-config.outputs.working_directory }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - uses: suzuki-shunsuke/tfaction/deploy-ssh-key@main
      if: inputs.ssh_key != ''
      with:
       ssh_key: ${{ inputs.ssh_key }}

    - uses: suzuki-shunsuke/github-action-terraform-init@v0.1.2
      with:
        working_directory: ${{ steps.target-config.outputs.working_directory }}
        github_token: ${{ inputs.github_token }}
        github_app_token: ${{ inputs.github_app_token }}
